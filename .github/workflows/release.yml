name: Release Workflow

on:
  push:
    paths:
      - 'version.txt'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Get Last Release Tag
        id: last_release
        run: echo "::set-output name=TAG::$(git describe --tags --abbrev=0)"

      - name: Generate Release Notes
        id: release_notes
        run: |
          LAST_TAG=${{ steps.last_release.outputs.TAG }}
          RELEASE_NOTES=$(git log $LAST_TAG..HEAD --pretty=format:"%h %s" --reverse)
          RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
          echo "::set-output name=NOTES::$RELEASE_NOTES"

      - name: Read Version File
        id: version
        run: echo "::set-output name=VERSION::$(cat version.txt)"

      - name: Prepare Artifacts
        run: cp smd.py smd-${{ steps.version.outputs.VERSION }}.py

      # - name: Prepare Artifacts
      #   run: |
      #     git archive --format=tar.gz --output source-code-${{ steps.version.outputs.VERSION }}.tar.gz HEAD
      #     git archive --format=zip --output source-code-${{ steps.version.outputs.VERSION }}.zip HEAD
      #     cp smd.py smd-${{ steps.version.outputs.VERSION }}.py

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.NOTES }}
          draft: false
          prerelease: false

      # - name: Upload Source Code tar.gz
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./source-code-${{ steps.version.outputs.VERSION }}.tar.gz
      #     asset_name: source-code-${{ steps.version.outputs.VERSION }}.tar.gz
      #     asset_content_type: application/gzip

      # - name: Upload Source Code zip
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./source-code-${{ steps.version.outputs.VERSION }}.zip
      #     asset_name: source-code-${{ steps.version.outputs.VERSION }}.zip
      #     asset_content_type: application/zip

      - name: Upload smd.py
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./smd-${{ steps.version.outputs.VERSION }}.py
          asset_name: smd-${{ steps.version.outputs.VERSION }}.py
          asset_content_type: text/plain
